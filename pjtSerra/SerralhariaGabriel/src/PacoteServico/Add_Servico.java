
package PacoteServico;

import Interfaces.Principal;
import java.awt.Color;
import java.awt.Component;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bruno Mezenga
 */
public class Add_Servico extends javax.swing.JDialog {
    
    Color cinza = new Color(204, 204, 204);
    Color preto = new Color(0, 0, 0);
    Color branco = new Color(255, 255, 255);

    Date h = new Date();

    SimpleDateFormat form = new SimpleDateFormat("hh:mm");

    String as = form.format(h);

    SimpleDateFormat fore = new SimpleDateFormat("dd/MM/yyyy");
    //Método que recebe a data e formata apenas o parâmetro de Simple
    String Data_Inicio = fore.format(h);

    String hora = as;

    Date data = new Date();

    DefaultTableModel modeloTabela;// tabela da consulta OS

    /**
     * Creates new form Add_Servico
     */
    public Add_Servico(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        botaoExcluirOs.setBackground(cinza);
        botaoExcluirOs.setForeground(Color.BLACK);
        botaoServicoAdd.setBackground(cinza);
        botaoServicoAdd.setForeground(Color.BLACK);
        botaoServicoCancelar.setBackground(cinza);
        botaoServicoCancelar.setForeground(Color.BLACK);
        adiciona.setBackground(cinza);
        adiciona.setForeground(Color.BLACK);
        cancelarAddLista.setBackground(cinza);
        cancelarAddLista.setForeground(Color.BLACK);

        
        
        modeloTabela = (DefaultTableModel) tabelaExcluirOS.getModel();//tabela cliente

        //c_data.setText(Data_Inicio);
        erroDescricao.setVisible(false);
        errroValor.setVisible(false);

        descriLabel.setForeground(Color.black);
        desricaoNovaOS.setBorder(new LineBorder(Color.BLACK));
        quantM2.setForeground(Color.black);
        quantidadeM2.setBorder(new LineBorder(Color.BLACK));
        erroQuantM.setVisible(false);

        servicoAddDescricao.setBorder(new LineBorder(Color.BLACK));
        servicoAddPagamento.setBorder(new LineBorder(Color.BLACK));
        servicoAddStatus.setBorder(new LineBorder(Color.BLACK));
        servicoAddValor.setBorder(new LineBorder(Color.BLACK));
        c_data.setBorder(new LineBorder(Color.BLACK));;
        // dia.setBorder(new LineBorder(Color.BLACK));
        ///mes.setBorder(new LineBorder(Color.BLACK));
        // ano.setBorder(new LineBorder(Color.BLACK));

        povoaComboOS(); // Chama o método de preenchimento do comboBox de descrição da OS

        erroNew.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        servicoAddDescricao = new javax.swing.JComboBox<>();
        jLabel47 = new javax.swing.JLabel();
        erroDescricao = new javax.swing.JLabel();
        servicoAddStatus = new javax.swing.JComboBox<>();
        jLabel63 = new javax.swing.JLabel();
        servicoAddPagamento = new javax.swing.JComboBox<>();
        jLabel45 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        servicoAddValor = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        errroValor = new javax.swing.JLabel();
        botaoServicoAdd = new javax.swing.JButton();
        quantM2 = new javax.swing.JLabel();
        quantidadeM2 = new javax.swing.JTextField();
        erroQuantM = new javax.swing.JLabel();
        c_data = new javax.swing.JFormattedTextField();
        botaoServicoCancelar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        desricaoNovaOS = new javax.swing.JTextField();
        descriLabel = new javax.swing.JLabel();
        adiciona = new javax.swing.JButton();
        erroNew = new javax.swing.JLabel();
        cancelarAddLista = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaExcluirOS = new javax.swing.JTable();
        botaoExcluirOs = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("On Serra - Nova OS");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nova ordem de serviço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 15), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel25.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastrar Serviço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        servicoAddDescricao.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        jLabel47.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(51, 51, 51));
        jLabel47.setText("* Descrição:");

        erroDescricao.setBackground(new java.awt.Color(255, 255, 255));
        erroDescricao.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        erroDescricao.setForeground(new java.awt.Color(255, 0, 0));
        erroDescricao.setText("*Obrigatório");

        servicoAddStatus.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        servicoAddStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Em andamento", "Finalizado" }));

        jLabel63.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(51, 51, 51));
        jLabel63.setText("* Status:");

        servicoAddPagamento.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        servicoAddPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "À vista", "Fiado" }));
        servicoAddPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicoAddPagamentoActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(51, 51, 51));
        jLabel45.setText("* Pagamento:");

        jLabel43.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(51, 51, 51));
        jLabel43.setText("* Data de Entrega:");

        servicoAddValor.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        servicoAddValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicoAddValorActionPerformed(evt);
            }
        });
        servicoAddValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                servicoAddValorKeyTyped(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(51, 51, 51));
        jLabel44.setText("* Valor da mão de obra por m²:");

        errroValor.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        errroValor.setForeground(new java.awt.Color(255, 0, 0));
        errroValor.setText("*Obrigatório");

        botaoServicoAdd.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        botaoServicoAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/accept.png"))); // NOI18N
        botaoServicoAdd.setText("Cadastrar");
        botaoServicoAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoServicoAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoServicoAddMouseExited(evt);
            }
        });
        botaoServicoAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoServicoAddActionPerformed(evt);
            }
        });

        quantM2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quantM2.setText("* Quantidade de m²:");

        quantidadeM2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        quantidadeM2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantidadeM2KeyTyped(evt);
            }
        });

        erroQuantM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        erroQuantM.setForeground(new java.awt.Color(255, 0, 0));
        erroQuantM.setText("*Obrigatório");

        try {
            c_data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        c_data.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        botaoServicoCancelar.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        botaoServicoCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/cross_1.png"))); // NOI18N
        botaoServicoCancelar.setText("Cancelar");
        botaoServicoCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoServicoCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoServicoCancelarMouseExited(evt);
            }
        });
        botaoServicoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoServicoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(servicoAddValor, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(errroValor)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel63)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(servicoAddStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 172, Short.MAX_VALUE)
                                        .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(c_data, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel44))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(erroQuantM)
                                    .addComponent(quantM2)
                                    .addComponent(jLabel45)
                                    .addComponent(servicoAddPagamento, 0, 143, Short.MAX_VALUE)
                                    .addComponent(quantidadeM2)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(botaoServicoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoServicoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(erroDescricao))
                            .addComponent(servicoAddDescricao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 19, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(erroDescricao))
                .addGap(7, 7, 7)
                .addComponent(servicoAddDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(jLabel63))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servicoAddStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(servicoAddPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantM2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantidadeM2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c_data, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(erroQuantM))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servicoAddValor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errroValor))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoServicoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoServicoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        jTabbedPane1.addTab("Anotar serviço", new javax.swing.ImageIcon(getClass().getResource("/Icone/user_edit.png")), jPanel6); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adiconar mais descrições", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        desricaoNovaOS.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        desricaoNovaOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desricaoNovaOSActionPerformed(evt);
            }
        });

        descriLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        descriLabel.setText("* Descrição OS:");

        adiciona.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        adiciona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/add.png"))); // NOI18N
        adiciona.setText("Adicionar");
        adiciona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adicionaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adicionaMouseExited(evt);
            }
        });
        adiciona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionaActionPerformed(evt);
            }
        });

        erroNew.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        erroNew.setForeground(new java.awt.Color(255, 0, 0));
        erroNew.setText("* Obrigatório");

        cancelarAddLista.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        cancelarAddLista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/cross_1.png"))); // NOI18N
        cancelarAddLista.setText("Cancelar");
        cancelarAddLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelarAddListaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelarAddListaMouseExited(evt);
            }
        });
        cancelarAddLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarAddListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(adiciona, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelarAddLista, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(descriLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(erroNew))
                        .addComponent(desricaoNovaOS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriLabel)
                    .addComponent(erroNew))
                .addGap(6, 6, 6)
                .addComponent(desricaoNovaOS, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adiciona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelarAddLista, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Excluir OS da Lista", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(51, 51, 51))); // NOI18N
        jPanel8.setForeground(new java.awt.Color(51, 51, 51));

        tabelaExcluirOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaExcluirOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaExcluirOSMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaExcluirOS);

        botaoExcluirOs.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        botaoExcluirOs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/cross.png"))); // NOI18N
        botaoExcluirOs.setText("Excluir");
        botaoExcluirOs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoExcluirOsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoExcluirOsMouseExited(evt);
            }
        });
        botaoExcluirOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirOsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoExcluirOs, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoExcluirOs, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Adiconar ", new javax.swing.ImageIcon(getClass().getResource("/Icone/add_1.png")), jPanel7); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1)
                    .addComponent(jTabbedPane1))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void erroQ() {
        erroQuantM.setText("Valor inválido");
        erroQuantM.setVisible(true);
        quantidadeM2.setBorder(new LineBorder(Color.RED));
    }

    public void erroMao() {
        errroValor.setText("Valor inválido");
        errroValor.setVisible(true);
        servicoAddValor.setBorder(new LineBorder(Color.RED));
    }

    public void voltaBordaOS() {
        servicoAddDescricao.setBorder(new LineBorder(Color.BLACK));
        servicoAddPagamento.setBorder(new LineBorder(Color.BLACK));
        servicoAddStatus.setBorder(new LineBorder(Color.BLACK));
        servicoAddValor.setBorder(new LineBorder(Color.BLACK));;
        c_data.setBorder(new LineBorder(Color.BLACK));
        //dia.setBorder(new LineBorder(Color.BLACK));
        //mes.setBorder(new LineBorder(Color.BLACK));
        //ano.setBorder(new LineBorder(Color.BLACK));
        //desricaoNovaOS.setBorder(new LineBorder(Color.BLACK));
        //  erroNew.setVisible(false);
        //erroNew.setText("*Obrigatório");

    }

    public void fecha() {
        this.setVisible(false);
    }

    public void voltaNewOS() {
        desricaoNovaOS.setText(null);
        desricaoNovaOS.setBorder(new LineBorder(Color.BLACK));
        erroNew.setVisible(false);
        erroNew.setVisible(false);
        erroNew.setText("*Obrigatório");
        limpaCombo();
    }

    public void limpaCombo() {
        servicoAddDescricao.removeAllItems(); // remove todos os itens do Combobox
        povoaComboOS(); // repovoa o combobox, porque se nao ficaria duas listas ou mais dependendo da quantidade de novas OS adicionadas a lista
    }

    public void limparCadastroServico() {

        servicoAddDescricao.setSelectedItem("...");
        servicoAddPagamento.setSelectedItem("...");
        servicoAddStatus.setSelectedItem("...");
        servicoAddValor.setText(null);
        c_data.setText(null);
        // c_data.setText("  /  /    ");
        // dia.setSelectedIndex(0);
        //mes.setSelectedIndex(0);
        //ano.setSelectedIndex(0);
        errroValor.setVisible(false);
        erroQuantM.setVisible(false);
        erroDescricao.setVisible(false);
        quantidadeM2.setBorder(new LineBorder(Color.BLACK));
        quantidadeM2.setText(null);

    }

    public void povoaComboOS() {
        ConexaoServico os = new ConexaoServico();
        os.conectar();

        for (OS oX : os.consultaOS()) {
            servicoAddDescricao.addItem(oX.toString());
        }
    }

    public void consulta() {
        modeloTabela.setNumRows(0);
        ConexaoServico os = new ConexaoServico();
        os.conectar();
        for (OsLista l : os.consultarListaOS()) {
            modeloTabela.addRow(new Object[]{l.getOrdemX(), l.getOrdemXNome()});
        }
        os.fecharConexao();
        tabelaExcluirOS.getTableHeader().setReorderingAllowed(false); // não pode reordenar o cabeçalho
        tabelaExcluirOS.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        corNalinhaOS(); // alerta com o background que o produto está com o estoque 
    }

     public void corNalinhaOS() {

        tabelaExcluirOS.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                // verifica se há estoque com 5ou mnos unidadesde umm produto
                if (isSelected) {
                    setBackground(Color.GRAY);
                    setHorizontalAlignment(CENTER);
                } else {
                    setBackground(Color.WHITE);
                    setForeground(Color.BLACK);
                    setHorizontalAlignment(CENTER);
                }
                return this;
            }

        });

    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        consulta(); // povoa a tabela lsta de OS
        desabilitaBotao();

    }//GEN-LAST:event_formWindowOpened

    private void botaoServicoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoServicoCancelarActionPerformed
        // TODO add your handling code here:
        //botaoExcluirOs.setEnabled(false); //  desabilita o botao excluir OS
        limparCadastroServico();
        voltaBordaOS();
    }//GEN-LAST:event_botaoServicoCancelarActionPerformed

    private void quantidadeM2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeM2KeyTyped
        // TODO add your handling code here:
        String cadastraServicoCampoValor = "0123456789,";
        if (!cadastraServicoCampoValor.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }

        int limit = 6; //12000,25

        if (quantidadeM2.getText().length() == limit) {
            evt.consume();
        }
    }//GEN-LAST:event_quantidadeM2KeyTyped

    private void botaoServicoAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoServicoAddActionPerformed

        double qM = 0, mao = 0, luc = 0;
        String qm1 = "", qm2 = "", mao1 = "", mao2 = "";

        /*Date ada = new Date();
        SimpleDateFormat vada = new SimpleDateFormat("dd/MM/yyyy");
        String cada = vada.format(ada);
        System.out.println("data " + cada);
        String dd = "", mm = "", yyyy = "";
        dd = cada.substring(0, 2);
        mm = cada.substring(3, 5);
        yyyy = cada.substring(6, 10);
        System.out.println("d " + dd);
        System.out.println("m " + mm);
        System.out.println("a " + yyyy);*/
        if (servicoAddDescricao.getSelectedItem().equals("...")) {
            erroDescricao.setVisible(true);
            servicoAddDescricao.setBorder(new LineBorder(Color.RED));
        } else if (!servicoAddDescricao.getSelectedItem().equals("...")) {
            erroDescricao.setVisible(false);
            servicoAddDescricao.setBorder(new LineBorder(Color.BLUE));
        }

        if (servicoAddPagamento.getSelectedItem().equals("...")) {
            servicoAddPagamento.setBorder(new LineBorder(Color.RED));
        } else if (!servicoAddPagamento.getSelectedItem().equals("")) {
            servicoAddPagamento.setBorder(new LineBorder(Color.BLUE));
        }

        // Verificação
        if (quantidadeM2.getText().length() >= 1) {
            try {
                erroQuantM.setText("* Obrigatório");
                erroQuantM.setVisible(false);
                quantidadeM2.setBorder(new LineBorder(Color.BLUE));

                qm1 = quantidadeM2.getText(); // Pega o valor digitado no campo
                qm2 = qm1.replace(",", "."); // Retira as virgulas e põe pontos
                qM = Double.parseDouble(qm2);

                if (qM == 0) {
                    erroQuantM.setText(" insira um valor maior que 0");
                    erroQuantM.setVisible(true);
                    quantidadeM2.setBorder(new LineBorder(Color.RED));
                } else {
                    erroQuantM.setVisible(false);
                    quantidadeM2.setBorder(new LineBorder(Color.BLUE));
                }
            } catch (NumberFormatException ex) {
                erroQ();
            }
        } else if (quantidadeM2.getText().equals("")) {
            erroQuantM.setVisible(true);
            quantidadeM2.setBorder(new LineBorder(Color.RED));
        }

        if (servicoAddValor.getText().equals("")) {
            errroValor.setText("*Obrigatório");
            errroValor.setVisible(true);
            servicoAddValor.setBorder(new LineBorder(Color.RED));
        } else if (servicoAddValor.getText().length() >= 1) {
            try {
                errroValor.setText("*Obrigatório");
                errroValor.setVisible(false);
                servicoAddValor.setBorder(new LineBorder(Color.BLUE));
                mao1 = servicoAddValor.getText();
                mao2 = mao1.replace(",", ".");
                mao = Double.parseDouble(mao2);
                if (mao == 0) {
                    errroValor.setText(" insira um valor maior que 0");
                    errroValor.setVisible(true);
                    servicoAddValor.setBorder(new LineBorder(Color.RED));
                } else {
                    errroValor.setVisible(false);
                    servicoAddValor.setBorder(new LineBorder(Color.BLUE));
                }
            } catch (NumberFormatException ex) {
                erroMao();
            }
        }

        if (servicoAddStatus.getSelectedItem() == "...") {
            servicoAddStatus.setBorder(new LineBorder(Color.RED));
        } else if (!servicoAddStatus.getSelectedItem().equals("...")) {
            servicoAddStatus.setBorder(new LineBorder(Color.BLUE));
        }

        /*if (dia.getSelectedItem().equals("...")) {
            dia.setBorder(new LineBorder(Color.RED));
        } else if (!dia.getSelectedItem().equals("...")) {
            dia.setBorder(new LineBorder(Color.BLUE));
        }

        if (mes.getSelectedItem().equals("...")) {
            mes.setBorder(new LineBorder(Color.RED));
        } else if (!mes.getSelectedItem().equals("...")) {
            mes.setBorder(new LineBorder(Color.BLUE));
        }

        if (ano.getSelectedItem().equals("...")) {
            ano.setBorder(new LineBorder(Color.RED));
        } else if (!ano.getSelectedItem().equals("...")) {
            ano.setBorder(new LineBorder(Color.BLUE));
        }*/
        String data = c_data.getText();

        String mesT, diaT, anoT; //

        int iii, iia, iie; //

        DataValida d = new DataValida(data + " " + hora + ":00", DataValida.BarraComHora);

        DataValida Hoje = new DataValida();

        int t = 0;

        if (data.equals("  /  /    ")) {
            c_data.setBorder(new LineBorder(Color.RED));

        } else if (!data.equals("  /  /    ")) {
            //c_data.setBorder(new LineBorder(Color.RED));
            diaT = data.substring(0, 2);
            mesT = data.substring(3, 5);
            anoT = data.substring(6, 10);

            iii = Integer.parseInt(diaT);
            iie = Integer.parseInt(mesT);
            iia = Integer.parseInt(anoT);

            /*System.out.println("Mes " + mesT);
            System.out.println("dia " + diaT);
            System.out.println("ano " + anoT);*/

            System.out.println("Agora " + hora);

            if (iii > 31 || iii == 00 || iie > 12 || iie == 00 || iia == 0000) {
                c_data.setBorder(new LineBorder(Color.RED));
                //System.out.println("Mes aloprado");
            } else if (Hoje.getTimestamp().getTime() > d.getTimestamp().getTime()) {
                c_data.setBorder(new LineBorder(Color.RED));
                //System.out.println("Data incorreta");
            } else if (Hoje.getTimestamp().getTime() < d.getTimestamp().getTime()) {
                //JOptionPane.showMessageDialog(rootPane, "Data informada ainda está por vir!");

                //System.out.println("Data correta");
                c_data.setBorder(new LineBorder(Color.BLUE));
                t++;
            }
        }

        //!dia.getSelectedItem().equals("...") && !mes.getSelectedItem().equals("...") && !ano.getSelectedItem().equals("...")
        if (!servicoAddDescricao.getSelectedItem().equals("...") && !servicoAddPagamento.getSelectedItem().equals("") && quantidadeM2.getText().length() >= 1 && qM != 0) {
            if (servicoAddValor.getText().length() >= 1 && mao != 0 && !servicoAddStatus.getSelectedItem().equals("...") && quantidadeM2.getText().length() >= 1) {
                if (!data.equals("  /  /    ") && t == 1) {
                    try {
                        String servico_Status;

                        String data_Entrega = "";
                        String diaa = "";
                        String mesa = "";
                        String anoa = "";

                        //System.out.println("Data aaa: " + data);
                        //Instancia o objeto de simplificação de formatação
                        SimpleDateFormat form = new SimpleDateFormat("dd/MM/yyyy");
                        //Método que recebe a data e formata apenas o parâmetro de Simple
                        String Data_Inicio = form.format(h);

                        String q = quantidadeM2.getText();
                        String m = servicoAddValor.getText();

                        data_Entrega = c_data.getText();
                        servico_Status = servicoAddStatus.getSelectedItem().toString();
                        String descricao_Servico = servicoAddDescricao.getSelectedItem().toString();
                        String pagamento = (String) servicoAddPagamento.getSelectedItem();
                        String Cpf_Cliente = Principal.servicoCpfCliente;
                        //System.out.println(Cpf_Cliente);
                        String Login_Usuario = Principal.nome;
                        BigDecimal qM2 = new BigDecimal(q.replaceAll("\\.", "").replace(",", ".")); //remove a virgula e troca por ponto
                        BigDecimal mao_Obra = new BigDecimal(m.replaceAll("\\.", "").replace(",", ".")); //remove a virgula e troca por ponto
                        //double quantidadeM2 = Double.parseDouble(this.quantidadeM2.getText());
                        //double mao_Obra = Double.parseDouble(ServicoAddValor.getText());
                        //System.out.println(mao_Obra);

                        BigDecimal valor = mao_Obra.multiply(qM2);

                        //System.out.println("Valor total:" + valor);

                        ConexaoServico servico = new ConexaoServico();
                        servico.cadastrarServico(descricao_Servico, Cpf_Cliente, Data_Inicio, data_Entrega, pagamento, valor, servico_Status, mao_Obra, qM2, Login_Usuario, luc);
                        limparCadastroServico();
                        voltaBordaOS();
                        fecha();
                        

                    } catch (NumberFormatException e) {
                        System.out.println("Valor inválido 2");
                        //JOptionPane.showMessageDialog(null, "Valor inválido, insira o valor válido, exemplo 56.60");
                    }

                }
            }
        }
    }//GEN-LAST:event_botaoServicoAddActionPerformed

    private void servicoAddValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicoAddValorKeyTyped
        String cadastraServicoCampoValor = "0123456789,";
        if (!cadastraServicoCampoValor.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }

        int limit = 6; // 12000,00

        if (servicoAddValor.getText().length() == limit) {
            evt.consume();
        }
    }//GEN-LAST:event_servicoAddValorKeyTyped

    private void servicoAddValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicoAddValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicoAddValorActionPerformed

    private void servicoAddPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicoAddPagamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_servicoAddPagamentoActionPerformed

    private void desricaoNovaOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desricaoNovaOSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desricaoNovaOSActionPerformed

    private void adicionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionaActionPerformed
        // TODO add your handling code here:
        String ordemXNome = "";
        if (desricaoNovaOS.getText().length() < 8) {
            erroNew.setVisible(true);
            erroNew.setText("* mínimo de 8 caracteres");
            desricaoNovaOS.setBorder(new LineBorder(Color.RED));
        } else if (desricaoNovaOS.getText().length() >= 8) {
            erroNew.setVisible(false);
            erroNew.setText("* Obrigatório");
            desricaoNovaOS.setBorder(new LineBorder(Color.BLUE));

            try {
                ordemXNome = desricaoNovaOS.getText();
                ConexaoServico os = new ConexaoServico();
                os.cadastrarOS(ordemXNome);
                voltaNewOS(); // Reseta a borda e limpa o campo
                consulta();
                //povoaComboOS(); // Adicona o item cadastrado
            } catch (SecurityException ex) {
                JOptionPane.showMessageDialog(null, "Erro");
            }

        }
    }//GEN-LAST:event_adicionaActionPerformed

    private void cancelarAddListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarAddListaActionPerformed
        // TODO add your handling code here:
        botaoExcluirOs.setEnabled(false); //  desabilita o botao excluir OS
        voltaNewOS(); // Reseta a  e limpa o campo
    }//GEN-LAST:event_cancelarAddListaActionPerformed

    private void tabelaExcluirOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaExcluirOSMouseClicked
        // TODO add your handling code here:
        habilitaBotao();
    }//GEN-LAST:event_tabelaExcluirOSMouseClicked

    private void botaoExcluirOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirOsActionPerformed
        // TODO add your handling code here:
        int cod; // de controle da tabela
        int sair = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (sair == JOptionPane.YES_OPTION) {
            cod = Integer.parseInt(tabelaExcluirOS.getValueAt(tabelaExcluirOS.getSelectedRow(), 0).toString());
            //System.out.println("Codigo Produto " + cod);

            ConexaoServico ser = new ConexaoServico();
            ser.conectar();

            ser.deletarOsLista(cod); // Método de exclusão de Os da lista de serviços para o cliente
            consulta(); // povoa a tabela lsta de OS
            limpaCombo();
            cod = 0; // código selecionado é zerado após a exlusão
            desabilitaBotao(); // desabilita botão
            consulta(); // povoa a tabela lsta de OS
            ser.fecharConexao();// Fecha a conexão

        } else {
            cod = 0; // código selecionado é zerado após a exlusão
            desabilitaBotao(); // desabilita o botão excluir OS da lista
        }
    }//GEN-LAST:event_botaoExcluirOsActionPerformed

    private void botaoServicoAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoAddMouseEntered
        // TODO add your handling code here: botaoServicoCancelar.setBackground(Color.yellow);
        botaoServicoAdd.setBackground(Color.WHITE);
        botaoServicoAdd.setForeground(Color.BLACK);

    }//GEN-LAST:event_botaoServicoAddMouseEntered

    private void botaoServicoAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoAddMouseExited
        // TODO add your handling code here:
        botaoServicoAdd.setBackground(cinza);
        botaoServicoAdd.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoAddMouseExited

    private void botaoServicoCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoCancelarMouseEntered
        // TODO add your handling code here:
        botaoServicoCancelar.setBackground(Color.WHITE);
        botaoServicoCancelar.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoCancelarMouseEntered

    private void botaoServicoCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoCancelarMouseExited
        // TODO add your handling code here:
        botaoServicoCancelar.setBackground(cinza);
        botaoServicoCancelar.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoCancelarMouseExited

    private void adicionaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adicionaMouseEntered
        // TODO add your handling code here:
        adiciona.setBackground(Color.WHITE);
        adiciona.setForeground(Color.BLACK);
    }//GEN-LAST:event_adicionaMouseEntered

    private void adicionaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adicionaMouseExited
        // TODO add your handling code here:
        adiciona.setBackground(cinza);
        adiciona.setForeground(Color.BLACK);
    }//GEN-LAST:event_adicionaMouseExited

    private void cancelarAddListaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarAddListaMouseEntered
        // TODO add your handling code here:
        cancelarAddLista.setBackground(Color.WHITE);
        cancelarAddLista.setForeground(Color.BLACK);
    }//GEN-LAST:event_cancelarAddListaMouseEntered

    private void cancelarAddListaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarAddListaMouseExited
        // TODO add your handling code here:
        cancelarAddLista.setBackground(cinza);
        cancelarAddLista.setForeground(Color.BLACK);
    }//GEN-LAST:event_cancelarAddListaMouseExited

    private void botaoExcluirOsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoExcluirOsMouseEntered
        // TODO add your handling code here:
        botaoExcluirOs.setBackground(Color.WHITE);
        botaoExcluirOs.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoExcluirOsMouseEntered

    private void botaoExcluirOsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoExcluirOsMouseExited
        // TODO add your handling code here:
        botaoExcluirOs.setBackground(cinza);
        botaoExcluirOs.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoExcluirOsMouseExited

    public void habilitaBotao() {
        botaoExcluirOs.setEnabled(true);
    }

    public void desabilitaBotao() {
        botaoExcluirOs.setEnabled(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Servico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Servico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Servico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Servico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Add_Servico dialog = new Add_Servico(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adiciona;
    private javax.swing.JButton botaoExcluirOs;
    private javax.swing.JButton botaoServicoAdd;
    private javax.swing.JButton botaoServicoCancelar;
    private javax.swing.JFormattedTextField c_data;
    private javax.swing.JButton cancelarAddLista;
    private javax.swing.JLabel descriLabel;
    private javax.swing.JTextField desricaoNovaOS;
    private javax.swing.JLabel erroDescricao;
    private javax.swing.JLabel erroNew;
    private javax.swing.JLabel erroQuantM;
    private javax.swing.JLabel errroValor;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel quantM2;
    private javax.swing.JTextField quantidadeM2;
    private javax.swing.JComboBox<String> servicoAddDescricao;
    private javax.swing.JComboBox<String> servicoAddPagamento;
    private javax.swing.JComboBox<String> servicoAddStatus;
    private javax.swing.JTextField servicoAddValor;
    private javax.swing.JTable tabelaExcluirOS;
    // End of variables declaration//GEN-END:variables

}
