package PacoteServico;

import HasServico.ConsultaHasServico;
import Interfaces.Principal;
import static Interfaces.Principal.entregaServico;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.border.LineBorder;

/**
 *
 * @author Bruno Mezenga
 */
public class Update_Servico extends javax.swing.JDialog {

    Color cinza = new Color(204, 204, 204);

    Date h = new Date();

    SimpleDateFormat form = new SimpleDateFormat("hh:mm");

    String as = form.format(h);

    SimpleDateFormat fore = new SimpleDateFormat("dd/MM/yyyy");
    //Método que recebe a data e formata apenas o parâmetro de Simple
    String Data_Inicio = fore.format(h);

    String hora = as;

    Date data = new Date();

    /**
     * Creates new form Update_Servico
     */
    public Update_Servico(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        servicoUpdateDescricao.setBorder(new LineBorder(Color.BLACK));
        status.setBorder(new LineBorder(Color.BLACK));
        servicoUpdateValor.setBorder(new LineBorder(Color.BLACK));
        servicoUpdatePagamento.setBorder(new LineBorder(Color.BLACK));
        c_dataU.setBorder(new LineBorder(Color.BLACK));
        //dia.setBorder(new LineBorder(Color.BLACK));
        //mes.setBorder(new LineBorder(Color.BLACK));
        //ano.setBorder(new LineBorder(Color.BLACK));

        erroQ2.setVisible(false);
        erroDescricaoAtuOS.setVisible(false);
        erroValorAtuOS.setVisible(false);
        quantM2.setForeground(Color.BLACK);
        quantM02.setBorder(new LineBorder(Color.BLACK));

        // botões
        botaoServicoUpdate.setBackground(cinza);
        botaoServicoUpdate.setForeground(Color.BLACK);
        botaoServicoCancelar.setBackground(cinza);
        botaoServicoCancelar.setForeground(Color.BLACK);

        povoaComboOS();
        setaCampos();

    }

    public void setaCampos() {

        servicoUpdateDescricao.setSelectedItem(Principal.descricaoServico);;
        status.setSelectedItem(Principal.statusServico);
        servicoUpdateValor.setText(Principal.precoServico);
        servicoUpdatePagamento.setSelectedItem(Principal.pagamentoServico);
        quantM02.setText(Principal.m2);
        c_dataU.setText(Principal.d + Principal.m + Principal.a);
        System.out.println("Cdadada " + c_dataU.toString());
        //dia.setSelectedItem(Principal.d);
        //mes.setSelectedItem(Principal.m);
        //ano.setSelectedItem(Principal.a);
        System.out.println(Principal.statusServico);
        System.out.println(Principal.pagamentoServico);
        System.out.println("Entrega " + entregaServico);

    }

    public void povoaComboOS() {
        ConexaoServico os = new ConexaoServico();
        os.conectar();

        for (OS oX : os.consultaOS()) {
            servicoUpdateDescricao.addItem(oX.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        botaoServicoUpdate = new javax.swing.JButton();
        servicoUpdateValor = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        servicoUpdatePagamento = new javax.swing.JComboBox<>();
        erroDescricaoAtuOS = new javax.swing.JLabel();
        erroValorAtuOS = new javax.swing.JLabel();
        quantM02 = new javax.swing.JTextField();
        quantM2 = new javax.swing.JLabel();
        servicoUpdateDescricao = new javax.swing.JComboBox<>();
        erroQ2 = new javax.swing.JLabel();
        c_dataU = new javax.swing.JFormattedTextField();
        botaoServicoCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("On Serra - Atualizar OS");
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar ordem de Serviço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel61.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(51, 51, 51));
        jLabel61.setText("* Pagamento:");

        jLabel62.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(51, 51, 51));
        jLabel62.setText("* Descrição:");
        jLabel62.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel63.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(51, 51, 51));
        jLabel63.setText("* Status:");

        jLabel60.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(51, 51, 51));
        jLabel60.setText("* Valor da mão de obra por m²:");

        botaoServicoUpdate.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        botaoServicoUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/edit.png"))); // NOI18N
        botaoServicoUpdate.setText("Atualizar");
        botaoServicoUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoServicoUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoServicoUpdateMouseExited(evt);
            }
        });
        botaoServicoUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoServicoUpdateActionPerformed(evt);
            }
        });

        servicoUpdateValor.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        servicoUpdateValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                servicoUpdateValorKeyTyped(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(51, 51, 51));
        jLabel43.setText("* Entrega:");

        status.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Em andamento", "Finalizado" }));

        servicoUpdatePagamento.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        servicoUpdatePagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "À vista", "Fiado" }));

        erroDescricaoAtuOS.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        erroDescricaoAtuOS.setForeground(new java.awt.Color(255, 0, 0));
        erroDescricaoAtuOS.setText("* Obrigatório");

        erroValorAtuOS.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        erroValorAtuOS.setForeground(new java.awt.Color(255, 0, 0));
        erroValorAtuOS.setText("* Obrigatório");

        quantM02.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        quantM02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantM02KeyTyped(evt);
            }
        });

        quantM2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        quantM2.setText("* Quantidade de m²:");

        servicoUpdateDescricao.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        erroQ2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        erroQ2.setForeground(new java.awt.Color(255, 0, 0));
        erroQ2.setText("* Obrigatório");

        try {
            c_dataU.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        c_dataU.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        botaoServicoCancelar.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        botaoServicoCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icone/cross.png"))); // NOI18N
        botaoServicoCancelar.setText("Cancelar");
        botaoServicoCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botaoServicoCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botaoServicoCancelarMouseExited(evt);
            }
        });
        botaoServicoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoServicoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(status, 0, 148, Short.MAX_VALUE)
                                    .addComponent(c_dataU))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantM2)
                                    .addGroup(jPanel40Layout.createSequentialGroup()
                                        .addComponent(quantM02, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(erroQ2))
                                    .addComponent(servicoUpdatePagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel61)))
                            .addComponent(servicoUpdateDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(jLabel62)
                                .addGap(224, 224, 224)
                                .addComponent(erroDescricaoAtuOS)))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel60)
                            .addComponent(jLabel63)
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(servicoUpdateValor, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(erroValorAtuOS))
                            .addGroup(jPanel40Layout.createSequentialGroup()
                                .addComponent(botaoServicoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoServicoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(erroDescricaoAtuOS))
                .addGap(6, 6, 6)
                .addComponent(servicoUpdateDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel63))
                .addGap(6, 6, 6)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(servicoUpdatePagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantM2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantM02, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c_dataU, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erroQ2))
                .addGap(6, 6, 6)
                .addComponent(jLabel60)
                .addGap(6, 6, 6)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servicoUpdateValor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erroValorAtuOS))
                .addGap(20, 20, 20)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoServicoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoServicoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Atualizar OS", new javax.swing.ImageIcon(getClass().getResource("/Icone/arrow_refresh.png")), jPanel1); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoServicoUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoServicoUpdateActionPerformed
        //Atualiza os dados do serviço
        String servico_Status;
        String conTotal = "", totalOS = "";
        String m2I = "", m2F = "";

        double n = 0, m = 0;

        if (servicoUpdateDescricao.getSelectedItem().equals("...")) {
            erroDescricaoAtuOS.setText("*Obrigatório");
            erroDescricaoAtuOS.setVisible(true);
            servicoUpdateDescricao.setBorder(new LineBorder(Color.RED));
        } else if (!servicoUpdateDescricao.getSelectedItem().equals("...")) {
            erroDescricaoAtuOS.setVisible(false);
            servicoUpdateDescricao.setBorder(new LineBorder(Color.BLUE));
        }

        if (servicoUpdateValor.getText().equals("")) {
            erroValorAtuOS.setText("* Obrigatório");
            erroValorAtuOS.setVisible(true);
            servicoUpdateValor.setBorder(new LineBorder(Color.RED));
        } else if (servicoUpdateValor.getText().length() >= 1) {
            try {

                conTotal = servicoUpdateValor.getText();
                totalOS = conTotal.replace(",", ".");
                n = Double.parseDouble(totalOS);
                if (n == 0) {
                    erroValorAtuOS.setText("* valor inválido");
                    erroValorAtuOS.setVisible(true);
                    servicoUpdateValor.setBorder(new LineBorder(Color.RED));
                } else {
                    erroValorAtuOS.setVisible(false);
                    servicoUpdateValor.setBorder(new LineBorder(Color.BLUE));
                }
            } catch (NumberFormatException xx) {
                erroValorAtuOS.setText("* Valor invalido");
                erroValorAtuOS.setVisible(true);
                servicoUpdateValor.setBorder(new LineBorder(Color.RED));
            }
        }

        if (quantM02.getText().equals("")) {
            erroQ2.setText("* Obrigatório");
            erroQ2.setVisible(true);
            quantM02.setBorder(new LineBorder(Color.RED));
        } else if (quantM02.getText().length() >= 1) {
            try {
                m2I = quantM02.getText();
                m2F = m2I.replace(",", ".");
                m = Double.parseDouble(m2F);
                if (m == 0) {
                    erroQ2.setText("* Valor inválido");
                    erroQ2.setVisible(true);
                    quantM02.setBorder(new LineBorder(Color.RED));
                } else {
                    erroQ2.setVisible(false);
                    quantM02.setBorder(new LineBorder(Color.BLUE));
                }

            } catch (NumberFormatException ex) {
                erroQ2.setText("* Valor inválido");
                erroQ2.setVisible(true);
                quantM02.setBorder(new LineBorder(Color.RED));
            }
        }

        if (status.getSelectedItem().equals("...")) {
            status.setBorder(new LineBorder(Color.RED));
        } else if (!status.getSelectedItem().equals("...")) {
            status.setBorder(new LineBorder(Color.BLUE));
        }

        if (servicoUpdatePagamento.getSelectedItem().equals("...")) {
            servicoUpdatePagamento.setBorder(new LineBorder(Color.RED));
        } else if (!servicoUpdatePagamento.getSelectedItem().equals("...")) {
            servicoUpdatePagamento.setBorder(new LineBorder(Color.BLUE));
        }

        String data = c_dataU.getText();

        String mesT, diaT, anoT; //

        int iii, iia, iie; //

        DataValida d = new DataValida(data + " " + hora + ":00", DataValida.BarraComHora);

        DataValida Hoje = new DataValida(); // classe que valida a data

        int t = 0; // variável de controle

        if (data.equals("  /  /    ")) {
            c_dataU.setBorder(new LineBorder(Color.RED));

        } else if (!data.equals("  /  /    ")) {
            //c_data.setBorder(new LineBorder(Color.RED));
            diaT = data.substring(0, 2);
            mesT = data.substring(3, 5);
            anoT = data.substring(6, 10);

            iii = Integer.parseInt(diaT);
            iie = Integer.parseInt(mesT);
            iia = Integer.parseInt(anoT);

            /*System.out.println("Mes " + mesT);
            System.out.println("dia " + diaT);
            System.out.println("ano " + anoT);*/

            //System.out.println("Agora " + hora);

            if (iii > 31 || iii == 00 || iie > 12 || iie == 00 || iia == 0000) {
                c_dataU.setBorder(new LineBorder(Color.RED));
              //  System.out.println("Mes aloprado ou ano aloprdado, ou dia aloprado");
            } else if (Hoje.getTimestamp().getTime() > d.getTimestamp().getTime()) {
                c_dataU.setBorder(new LineBorder(Color.RED));
               /// System.out.println("Data já passou");
            } else if (Hoje.getTimestamp().getTime() < d.getTimestamp().getTime()) {
                //JOptionPane.showMessageDialog(rootPane, "Data informada ainda está por vir!");

                //System.out.println("Data correta");
                c_dataU.setBorder(new LineBorder(Color.BLUE));
                t++;
            }
        }

        //!dia.getSelectedItem().equals("...") && !mes.getSelectedItem().equals("...") && !ano.getSelectedItem().equals("...")
        if (!servicoUpdateDescricao.getSelectedItem().equals("...") && servicoUpdateValor.getText().length() >= 1) {
            if (quantM02.getText().length() >= 1 && m != 0 && n != 0) {
                if (!status.getSelectedItem().equals("...") && (!servicoUpdatePagamento.getSelectedItem().equals("..."))) {
                    if (!data.equals("  /  /    ") && t == 1) {
                        try {

                            try {
                                ConexaoServico servico = new ConexaoServico();
                                ConsultaHasServico has = new ConsultaHasServico();
                                int codigoServico = Principal.codigoDoServico;

                                String data_Entrega = "";
                                String diaa = "";
                                String mesa = "";
                                String anoa = "";
                                //diaa = dia.getSelectedItem().toString();
                                //mesa = mes.getSelectedItem().toString();
                                //anoa = ano.getSelectedItem().toString();

                                data_Entrega = c_dataU.getText();
                                String descricao = servicoUpdateDescricao.getSelectedItem().toString();

                                double mao_Obra = 0, valorServico = 0, QuantidadeM2 = 0, valProdutos = 0, valProTotal = 0;

                                valProTotal = has.verificaTotal(Principal.codigoDoServico);

                                String pagamento = (String) servicoUpdatePagamento.getSelectedItem();
                                mao_Obra = Double.parseDouble(totalOS);
                                QuantidadeM2 = Double.parseDouble(m2F);
                                valorServico = (mao_Obra * QuantidadeM2) + valProTotal;
                                //System.out.println("ValorOS " + valorServico);

                                servico_Status = (String) status.getSelectedItem();
                                servico.atualizarServico(descricao, data_Entrega, pagamento, valorServico, servico_Status, mao_Obra, QuantidadeM2, codigoServico);

                                limparAtualizarServico();
                                voltaBordaAtuOs();
                                fecha();
                            } catch (SQLException ex) {
                                System.out.println("Erro Sql " + ex);
                            }

                        } catch (NumberFormatException e) {
                            //JOptionPane.showMessageDialog(null, "Valor inválido, insira um valor válido exemplo 960.50");
                            System.out.println("Erro no valor digitado");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_botaoServicoUpdateActionPerformed

    public void limparAtualizarServico() {
        servicoUpdateDescricao.setSelectedItem("...");
        servicoUpdatePagamento.setSelectedItem("...");
        servicoUpdateValor.setText(null);
        status.setSelectedItem("...");
        quantM02.setText(null);
        //buttonGroup1.clearSelection();
        //dia.setSelectedIndex(0);
        //mes.setSelectedIndex(0);
        //ano.setSelectedIndex(0);
    }

    public void voltaBordaAtuOs() {
        servicoUpdateDescricao.setBorder(new LineBorder(Color.BLACK));
        status.setBorder(new LineBorder(Color.BLACK));
        servicoUpdateValor.setBorder(new LineBorder(Color.BLACK));
        servicoUpdatePagamento.setBorder(new LineBorder(Color.BLACK));
        quantM02.setBorder(new LineBorder(Color.BLACK));
        c_dataU.setBorder(new LineBorder(Color.BLACK));
        //dia.setBorder(new LineBorder(Color.BLACK));
        //mes.setBorder(new LineBorder(Color.BLACK));
        //ano.setBorder(new LineBorder(Color.BLACK));
    }

    public void fecha() {
        this.setVisible(false);
    }

    private void servicoUpdateValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicoUpdateValorKeyTyped
        String atualizaServicoCampoStatus = "1234567890,";
        if (!atualizaServicoCampoStatus.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }

        int limit = 6;

        if (servicoUpdateValor.getText().length() == limit) {
            evt.consume();
        }
    }//GEN-LAST:event_servicoUpdateValorKeyTyped

    private void quantM02KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantM02KeyTyped
        // TODO add your handling code here:
        String atualizaServicoCampoStatus = "1234567890,";
        if (!atualizaServicoCampoStatus.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }

        int limit = 6;

        if (quantM02.getText().length() == limit) {
            evt.consume();
        }
    }//GEN-LAST:event_quantM02KeyTyped

    private void botaoServicoUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoUpdateMouseEntered
        // TODO add your handling code here:
        botaoServicoUpdate.setBackground(Color.WHITE);
        botaoServicoUpdate.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoUpdateMouseEntered

    private void botaoServicoUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoUpdateMouseExited
        // TODO add your handling code here:
        botaoServicoUpdate.setBackground(cinza);
        botaoServicoUpdate.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoUpdateMouseExited
    
    private void botaoServicoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoServicoCancelarActionPerformed
        // TODO add your handling code here:
        /* erroDescricaoAtuOS.setVisible(false);
        erroQ2.setVisible(false);
        erroValorAtuOS.setVisible(false);
        limparAtualizarServico(); // Limpa os campos
        voltaBordaAtuOs(); // retorna a borda padrao*/
        this.dispose();
    }//GEN-LAST:event_botaoServicoCancelarActionPerformed

    private void botaoServicoCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoCancelarMouseExited
        // TODO add your handling code here:
        botaoServicoCancelar.setBackground(cinza);
        botaoServicoCancelar.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoCancelarMouseExited

    private void botaoServicoCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoServicoCancelarMouseEntered
        // TODO add your handling code here:
        botaoServicoCancelar.setBackground(Color.WHITE);
        botaoServicoCancelar.setForeground(Color.BLACK);
    }//GEN-LAST:event_botaoServicoCancelarMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update_Servico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update_Servico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update_Servico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update_Servico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Update_Servico dialog = new Update_Servico(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoServicoCancelar;
    private javax.swing.JButton botaoServicoUpdate;
    private javax.swing.JFormattedTextField c_dataU;
    private javax.swing.JLabel erroDescricaoAtuOS;
    private javax.swing.JLabel erroQ2;
    private javax.swing.JLabel erroValorAtuOS;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField quantM02;
    private javax.swing.JLabel quantM2;
    private javax.swing.JComboBox<String> servicoUpdateDescricao;
    private javax.swing.JComboBox<String> servicoUpdatePagamento;
    private javax.swing.JTextField servicoUpdateValor;
    private javax.swing.JComboBox<String> status;
    // End of variables declaration//GEN-END:variables
}
